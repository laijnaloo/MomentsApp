@model Moments.Models.Moments

@{
    ViewBag.Title = "Create";
}

<h1 class="darkGreenText headerCss">Moments</h1><br>
<p class="userName">by @System.Web.HttpContext.Current.Session["UserName"].ToString()</p> 

<div class="formCentering">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <h2 class="headerText">Create New Moment</h2>
        <br />

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group" style="display:none">
                @Html.LabelFor(model => model.Username, "Username", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Username", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Titel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Titel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Titel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 relativePosition" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = "5" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="centerBlock">
                <div class="form-group">
                    <input class="btn crudButtons" type="file" name="file" id="file" style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;" />
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Place, "Place", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Place", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn crudButtons" />
                </div>
            </div>
        </div>
    }
</div>
<div>
    @Html.ActionLink("Back to Moment", "Index", null, new { @class = "editText" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
